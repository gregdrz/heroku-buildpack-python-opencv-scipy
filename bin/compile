#!/usr/bin/env bash

title() {
  echo "-----> $*"
}

subtitle() {
  echo "       $*"
}

# Taken from python heroku buildpack
###################################
shopt -s extglob

if [ $(uname) == Darwin ]; then
    sed() { command sed -l "$@"; }
else
    sed() { command sed -u "$@"; }
fi

# Does some serious copying.
deep-cp() {
  declare source="$1" target="$2"

  mkdir -p "$target"

  # cp doesn't like being called without source params,
  # so make sure they expand to something first.
  # subshell to avoid surprising caller with shopts.
  (
    shopt -s nullglob dotglob
    set -- "$source"/!(tmp|.|..)
    [[ $# == 0 ]] || cp -a "$@" "$target"
  )
}

# Does some serious moving.
deep-mv() {
  deep-cp "$1" "$2"
  deep-rm "$1"
}

# Does some serious deleting.
deep-rm() {
  # subshell to avoid surprising caller with shopts.
  (
    shopt -s dotglob
    rm -rf "$1"/!(tmp|.|..)
  )
}
###################################

BUILD_DIR=$1
CACHE_DIR=$2

APP_DIR="/app"
deep-mv $BUILD_DIR $APP_DIR
ORIG_BUILD_DIR=$BUILD_DIR
BUILD_DIR=$APP_DIR
cd $BUILD_DIR

unset ATLAS BLAS LAPACK LD_LIBRARY_PATH PATH PYTHONPATH
export ATLAS="$BUILD_DIR/.heroku/vendor/lib/atlas-base/libatlas.a"
export BLAS="$BUILD_DIR/.heroku/vendor/lib/atlas-base/atlas/libblas.a"
export LAPACK="$BUILD_DIR/.heroku/vendor/lib/atlas-base/atlas/liblapack.a"
export LD_LIBRARY_PATH="$BUILD_DIR/.heroku/vendor/lib:$BUILD_DIR/.heroku/vendor/lib/atlas-base:$BUILD_DIR/.heroku/vendor/lib/atlas-base/atlas"
export PATH="$BUILD_DIR/.heroku/vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
export PYTHONPATH="$BUILD_DIR/.heroku/vendor/lib/python2.7/site-packages/:$BUILD_DIR/.apt/usr/lib/python2.7/dist-packages/"

# Setup environment
mkdir -p $CACHE_DIR
title "Generating environment"
rm -f -r $CACHE_DIR/env.tar.gz
subtitle "Fetching..."
curl -s -L "https://db.tt/xurahIeK" > $CACHE_DIR/env.tar.gz
#curl -s -L "http://bit.ly/1M8sPPF" > $CACHE_DIR/env.tar.gz
subtitle "Unpacking..."
tar -xzf $CACHE_DIR/env.tar.gz -C $BUILD_DIR

# instructions for creating pygame
#apt-get install gfortran g++ liblapack-dev libsdl1.2-dev libsmpeg-dev mercurial
wget -O $CACHE_DIR/pygame.tar.gz https://bitbucket.org/pygame/pygame/get/6625feb3fc7f.tar.gz
tar zxvf $CACHE_DIR/pygame.tar.gz -C $BUILD_DIR
rm $CACHE_DIR/pygame.tar.gz
python $BUILD_DIR/pygame-pygame-6625feb3fc7f/setup.py -setuptools install
rm -r $BUILD_DIR/pygame-pygame-6625feb3fc7f

# installing application dependencies
if [ -f $BUILD_DIR/requirements.txt ]; then
	title "Found requirements.txt, installing dependencies using pip"
	$BUILD_DIR/.heroku/vendor/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --allow-all-external
fi

# creating env variables
title "Creating environment variables."
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/5251124.sh
export ATLAS="\$HOME/.heroku/vendor/lib/atlas-base/libatlas.a"
export BLAS="\$HOME/.heroku/vendor/lib/atlas-base/atlas/libblas.a"
export LAPACK="\$HOME/.heroku/vendor/lib/atlas-base/atlas/liblapack.a"
export LD_LIBRARY_PATH="\$HOME/.heroku/vendor/lib:\$HOME/.heroku/vendor/lib/atlas-base:\$HOME/.heroku/vendor/lib/atlas-base/atlas:\$LD_LIBRARY_PATH"
export PATH="\$HOME/.heroku/vendor/bin:\$PATH"
export PYTHONPATH="\$HOME/.heroku/vendor/lib/python2.7/site-packages/"


EOF

deep-mv $BUILD_DIR $ORIG_BUILD_DIR


title "Buildpack installed."
